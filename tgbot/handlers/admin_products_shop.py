from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery, Message
from aiogram.utils.exceptions import CantParseEntities

from tgbot.keyboards.inline_admin import category_edit_open_finl, position_edit_open_finl, category_edit_delete_finl, \
    position_edit_clear_finl, position_edit_delete_finl
from tgbot.keyboards.inline_z_all import category_remove_confirm_inl, position_remove_confirm_inl, \
    item_remove_confirm_inl, close_inl
from tgbot.keyboards.shop_keyboards import *
from tgbot.keyboards.reply_z_all import finish_load_rep, items_frep
from tgbot.keyboards.inline_z_page import position_create_open_fp
from tgbot.loader import dp
from tgbot.middlewares.throttling import rate_limit
from tgbot.services.api_sqlite_shop import *
from tgbot.services.api_sqlite import get_city_user, check_user_shop_exist
from tgbot.utils.const_functions import clear_list
from tgbot.utils.misc.bot_filters import IsAdmin, IsShopAdmin, IsAdminorShopAdmin
from tgbot.utils.misc_functions import get_position_admin, upload_text



# --------------------------------------------------------------------------------------------------------
# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
@dp.message_handler(IsShopAdmin(), text="üè™ –°–æ–∑–¥–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω ‚ûï", state="*")
async def product_category_create(message: Message, state: FSMContext):
    await state.finish()
    print("admin_products_shop - —Å–æ–∑–¥–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞")
    user_id=message.from_user.id
    if check_user_shop_exist(user_id):
        await message.answer("<b>üè™ –ú–∞–≥–∞–∑–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç üè∑</b>", parse_mode='HTML')
    else:
        await state.set_state("here_shop_name")
        await message.answer("<b>üè™ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ üè∑</b>", parse_mode='HTML')


# –ø—Ä–∏–Ω—è—Ç–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞, –∑–∞–ø—Ä–æ—Å –æ–ø–∏—Å–∞–Ω–∏—è
@dp.message_handler(IsAdmin(), state="here_shop_name")
async def product_category_create_name(message: Message, state: FSMContext):
    if len(message.text) <= 100:

        print("admin_products_shop - —Å–æ–∑–¥–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞")
        await state.update_data(data={'name': message.text})
        await state.set_state('here_shop_description')
        await message.answer("<b>üè™ –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ üìú</b>\n"
                             "‚ùï –û—Ç–ø—Ä–∞–≤—å—Ç–µ <code>0</code> —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å.", parse_mode='HTML')
    else:
        await message.answer("<b>‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 100 —Å–∏–º–≤–æ–ª–æ–≤.</b>\n"
                             "üè™ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ üè∑", parse_mode='HTML')


# –ø—Ä–∏–Ω—è—Ç–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞, –∑–∞–ø—Ä–æ—Å –∞–¥—Ä–µ—Å–∞
@dp.message_handler(IsAdmin(), state="here_shop_description")
async def product_category_create_name(message: Message, state: FSMContext):
    if len(message.text) <= 600:
        if message.text == '0':
            await state.update_data(data={'description': 'None'})
        else:
            await state.update_data(data={'description': message.text})
        await state.set_state('here_shop_adress')
        await message.answer("<b>üè™ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–¥—Ä–µ—Å—Å –º–∞–≥–∞–∑–∏–Ω–∞ üìç</b>\n"
                             "‚ùï –û—Ç–ø—Ä–∞–≤—å—Ç–µ <code>0</code> —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å.", parse_mode='HTML')


    else:
        await message.answer("<b>‚ùå –û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 600 —Å–∏–º–≤–æ–ª–æ–≤.</b>\n"
                             "üè™ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ üìú\n"
                             "‚ùï –û—Ç–ø—Ä–∞–≤—å—Ç–µ <code>0</code> —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å.", parse_mode='HTML')


# –ø—Ä–∏–Ω—è—Ç–∏–µ –∞–¥—Ä–µ—Å–∞ –º–∞–≥–∞–∑–∏–Ω–∞, –∑–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞
@dp.message_handler(IsAdmin(), state="here_shop_adress")
async def product_category_create_name(message: Message, state: FSMContext):
    if message.text == '0':
        await state.update_data(data={'address': 'None'})
    else:
        await state.update_data(data={'address': message.text})
    await state.set_state('here_shop_phone')
    await message.answer("<b>üè™ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –º–∞–≥–∞–∑–∏–Ω–∞ ‚òéÔ∏è</b>\n"
                         "‚ùï –û—Ç–ø—Ä–∞–≤—å—Ç–µ <code>0</code> —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å.", parse_mode='HTML')


# –ø—Ä–∏–Ω—è—Ç–∏–µ –Ω–æ–º–µ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞, –∑–∞–ø—Ä–æ—Å –ª–æ–≥–æ
@dp.message_handler(IsAdmin(), state="here_shop_phone")
async def product_category_create_name(message: Message, state: FSMContext):
    if message.text == '0':
        await state.update_data(data={'phone': 'None'})
    else:
        await state.update_data(data={'phone': message.text})
    await state.set_state('here_shop_logo')
    await message.answer("<b>üè™ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ üì∑</b>\n"
                         "‚ùï –û—Ç–ø—Ä–∞–≤—å—Ç–µ <code>0</code> —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å.", parse_mode='HTML')


# –ø—Ä–∏–Ω—è—Ç–∏–µ –ª–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞, –∑–∞–ø—Ä–æ—Å –ª–æ–≥–æ
@dp.message_handler(IsAdmin(), content_types=['photo','text'], state="here_shop_logo")
async def product_category_create_name(message: Message, state: FSMContext):
    if message.content_type == 'photo':
        logo = message.photo[0].file_id
    else:
        logo = None

    async with state.proxy() as data:
        print(data)
        name = data['name']
        description = data['description']
        address = data['address']
        phone = data['phone']

    await state.finish()

    city = get_city_user(message.from_user.id)
    add_shopx(name, description, address, phone, message.from_user.id, logo, city[0], city[1], city[2])
    await message.answer("<b>üè™ –ú–∞–≥–∞–∑–∏–Ω –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω ‚úÖ</b>", parse_mode='HTML')

################################################################################################
####################################### –°–û–ó–î–ê–ù–ò–ï –ú–ê–ì–ê–ó–ò–ù–ê #####################################
# –ü—Ä–∏–Ω—è—Ç–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è –µ—ë —Å–æ–∑–¥–∞–Ω–∏—è
@dp.message_handler(IsAdmin(), state="here_shop_name")
async def product_category_create_name(message: Message, state: FSMContext):
    if len(message.text) <= 100:
        add_shopx(clear_html(message.text))

        await state.finish()
        await message.answer("<b>üè™ –ú–∞–≥–∞–∑–∏–Ω –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω ‚úÖ</b>")
    else:
        await message.answer("<b>‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 100 —Å–∏–º–≤–æ–ª–æ–≤.</b>\n"
                             "üè™ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ üè∑")


# -----------------------------------------------------------------------------------------------------------
# –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü –≤—ã–±–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
@dp.message_handler(IsAdmin(), text="üè™ –ò–∑–º–µ–Ω–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω üñç", state="*")
async def product_category_edit(message: Message, state: FSMContext):
    await state.finish()

    shops = get_all_shopx()
    print(f'shops {shops}')

    if len(shops) >= 1:
        await message.answer("<b>üè™ –í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è üñç</b>",
                             reply_markup=shop_edit_open_fp(0, shops))
    else:
        await message.answer("<b>üè™ –ú–∞–≥–∞–∑–∏–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç üñç</b>")


# -----------------------------------------------------------------------------------------------------------
# –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü –≤—ã–±–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
@dp.message_handler(IsShopAdmin(), text="üè™ –ò–∑–º–µ–Ω–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω üñç", state="*")
async def product_category_edit(message: Message, state: FSMContext):
    await state.finish()
    user_id=message.from_user.id
    #if get_my_shopx(user_id):
    #shops = get_all_shopx()
    print(f'shops {shops}')
    shops = get_my_shopx(user_id)
    print(shops)

    if len(shops) >= 1:
        await message.answer("<b>üè™ –í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è üñç</b>",
                             reply_markup=shop_edit_open_fp(0, shops))
    else:
        await message.answer("<b>üè™ –ú–∞–≥–∞–∑–∏–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç üñç</b>")


# –°–º–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—ã–±–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞
@dp.message_handler(IsAdmin(), text_startswith="change_shop_edit_pg:", state="*")
async def product_category_edit(call: CallbackQuery, state: FSMContext):
    await state.finish()
    page = int(str(call.data).split(':')[1])
    shops = get_all_shopx()


    if len(shops) >= 1:
        await call.message.answer("<b>üè™ –í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è üñç</b>",
                             reply_markup=shop_edit_open_fp(page, shops))
    else:
        await call.message.answer("<b>üè™ –ú–∞–≥–∞–∑–∏–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç üñç</b>")



# –í—ã–±–æ—Ä  –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
@dp.callback_query_handler(IsAdmin(), text_startswith="shop_edit_here:", state="*")
async def product_category_edit_open(call: CallbackQuery, state: FSMContext):
    shop_id = int(call.data.split(":")[1])
    shop = get_the_shop(shop_id)

    text = f"<b>üéÅ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω:</b>\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\nüè∑ –ù–∞–∑–≤–∞–Ω–∏–µ: <code>{shop[1]}</code>\n" \
           f"üèô –ì–æ—Ä–æ–¥: <code>{shop[7]}</code>\nüóÉ –ê–¥—Ä–µ—Å: <code>{shop[4]}</code>\n" \
           f"üí∞ –¢–µ–ª–µ—Ñ–æ–Ω: <code>{shop[5]}‚ÇΩ</code>\n{shop[3]}"

    if shop[6] is None:
        await call.message.answer(text, parse_mode='HTML')

    else:
        await call.message.answer_photo(text, parse_mode='HTML')



################################ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–∑–∏—Ü–∏–∏ ########################

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø–æ–∑–∏—Ü–∏–∏
@dp.message_handler(IsAdminorShopAdmin(), text="üìÅ –°–æ–∑–¥–∞—Ç—å –ø–æ–∑–∏—Ü–∏—é ‚ûï", state="*")
async def product_position_create(message: Message, state: FSMContext):
    await state.finish()
    print("APS 182")

    #if len(get_all_shopx()) >= 1:
    await message.answer("<b>üìÅ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø–æ–∑–∏—Ü–∏–∏</b>",
                             reply_markup=position_create_open_fp(0))
    #else:
        #await message.answer("<b>‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –º–∞–≥–∞–∑–∏–Ω—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏.</b>")


######################################## –°–ê–ú–û –ò–ó–ú–ï–ù–ï–ù–ò–ï –ú–ê–ì–ê–ó–ò–ù–û–í ########################################
# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞
@dp.callback_query_handler(IsAdmin(), text_startswith="shop_edit_name:", state="*")
async def product_category_edit_name(call: CallbackQuery, state: FSMContext):
    shop_id = int(call.data.split(":")[1])
    remover = int(call.data.split(":")[2])

    await state.update_data(here_cache_shop_id=shop_id)
    await state.update_data(here_cache_shop_remover=remover)

    await state.set_state("here_change_shop_name")
    await call.message.delete()
    await call.message.answer("<b>üóÉ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ üè∑</b>")


# –ü—Ä–∏–Ω—è—Ç–∏–µ –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞
@dp.message_handler(IsAdmin(), state="here_change_shop_name")
async def product_shop_edit_name_get(message: Message, state: FSMContext):
    if len(message.text) <= 100:
        async with state.proxy() as data:
            shop_id = data['here_cache_shop_id']
            remover = data['here_cache_shop_remover']
        await state.finish()

        update_shopx(shop_id, shop_name=clear_html(message.text))

        get_fat_count = len(get_positionsx(shop_id=shop_id))
        get_shop = get_shopx(shop_id=shop_id)

        await message.answer(f"<b>üóÉ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: <code>{get_shop['category_name']}</code></b>\n"
                             "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                             f"üìÅ –ö–æ–ª-–≤–æ –ø–æ–∑–∏—Ü–∏–π: <code>{get_fat_count}—à—Ç</code>",
                             reply_markup=shop_edit_open_finl(shop_id, remover))
    else:
        await message.answer("<b>‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 100 —Å–∏–º–≤–æ–ª–æ–≤.</b>\n"
                             "üóÉ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ üè∑")



# -------------------------------------------------------------------------------------------------------------
# –û–∫–Ω–æ —Å —É—Ç–æ—á–Ω–µ–Ω–∏–µ–º —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã (–ø–æ–∑–∏—Ü–∏–∏ –∏ —Ç–æ–≤–∞—Ä—ã –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ)
@dp.message_handler(IsAdmin(), text="üè™ –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã ‚ùå", state="*")
async def product_category_remove(message: Message, state: FSMContext):
    await state.finish()

    await message.answer("<b>üóÉ –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã? ‚ùå</b>\n"
                         "‚ùó –¢–∞–∫ –∂–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –≤—Å–µ –ø–æ–∑–∏—Ü–∏–∏ –∏ —Ç–æ–≤–∞—Ä—ã",
                         reply_markup=category_remove_confirm_inl)



# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

################################################################################################
####################################### –ò–ó–ú–ï–ù–ï–ù–ò–ï –ú–ê–ì–ê–ó–ò–ù–ê ####################################
# –°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–±–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
@dp.callback_query_handler(IsAdmin(), text_startswith="catategory_edit_nextp:", state="*")
async def product_category_edit_next(call: CallbackQuery, state: FSMContext):
    remover = int(call.data.split(":")[1])

    await call.message.edit_text("<b>üóÉ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è üñç</b>",
                                 reply_markup=category_edit_next_page_fp(remover))


# –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
@dp.callback_query_handler(IsAdmin(), text_startswith="catategory_edit_backp:", state="*")
async def product_category_edit_back(call: CallbackQuery, state: FSMContext):
    remover = int(call.data.split(":")[1])

    await call.message.delete()
    await call.message.answer("<b>üóÉ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è üñç</b>",
                              reply_markup=category_edit_back_page_fp(remover))




# –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫ —Å–ø–∏—Å–∫—É –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
@dp.callback_query_handler(IsAdmin(), text_startswith="category_edit_return:", state="*")
async def product_category_edit_return(call: CallbackQuery, state: FSMContext):
    remover = int(call.data.split(":")[1])

    await call.message.edit_text("<b>üóÉ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è üñç</b>",
                                 reply_markup=category_edit_open_fp(remover))


